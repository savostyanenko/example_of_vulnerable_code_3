name: Build, Sign and SBOM Security Scan

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write           # створення релізів
  id-token: write           # OIDC для Sigstore
  security-events: write    # завантаження звітів у Security tab

jobs:
  # --- SBOM і перевірка безпеки ---
  sbom_scan:
    name: Generate and Scan SBOM
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate SBOM (source code)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: cyclonedx-json
          output-file: sbom.json

      - name: Scan SBOM with Grype
        id: scan
        uses: anchore/scan-action@v6
        with:
          sbom: sbom.json
          output-format: sarif
          output-file: grype-results.sarif
          fail-build: false
          severity-cutoff: medium

      - name: Upload results to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./grype-results.sarif

      - name: Save SBOM as artifact (for release job)
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  # --- Збірка, підпис і реліз ---
  build_sign_release:
    name: Build, Sign and Release
    runs-on: ubuntu-latest
    needs: sbom_scan
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip build

      - name: Build Python package
        run: |
          rm -rf dist
          python -m build

      - name: Download SBOM from previous job
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: dist/

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign artifacts with Cosign (Sigstore OIDC)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist/signed
          for f in dist/*; do
            [ -f "$f" ] || continue
            base=$(basename "$f")
            sig="dist/${base}.sig"
            cert="dist/${base}.pem"
            echo "Signing $base -> $sig $cert"
            cosign sign-blob "$f" \
              --output-signature "$sig" \
              --output-certificate "$cert"
            mv "$sig" "dist/signed/"
            mv "$cert" "dist/signed/"
          done
          ls -al dist/signed

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            dist/signed/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
